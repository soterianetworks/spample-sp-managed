buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }

}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

apply plugin: 'org.springframework.boot'

springBoot {
    excludeDevtools = false
}

dependencies {
    compile("org.springframework.boot:spring-boot-devtools")

    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework.cloud:spring-cloud-starter-zuul")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")

    compile("com.alibaba:druid:1.1.12")
    compile("mysql:mysql-connector-java:${mysqlConnectorVersion}")

    compile("com.soterianetworks:spase-starter:0.9.0")

    compile project(":core")
    compile project(":impl")
    compile project(":rest")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun {
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}
